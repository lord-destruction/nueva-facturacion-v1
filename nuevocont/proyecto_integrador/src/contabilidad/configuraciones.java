/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contabilidad;

import clases.controlformularios;
import clases.oayuda;
import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto_integrador.conexion;
import proyecto_integrador.dialogo;
import proyecto_integrador.panel;

/**
 *
 * @author lab4-01
 */
public class configuraciones extends javax.swing.JFrame {

    /**
     * Creates new form configuraciones
     */
    public configuraciones() {
        initComponents();
        cargar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rdradios = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdsi = new javax.swing.JRadioButton();
        rdno = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladatos = new javax.swing.JTable();
        btnaceptar = new javax.swing.JButton();
        btncuenta = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        lblactivar = new javax.swing.JLabel();
        cbtipo = new javax.swing.JComboBox();
        btnayuda1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        rdradios.add(rdsi);
        rdsi.setText("Si");

        rdradios.add(rdno);
        rdno.setText("No");

        tabladatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Descripcion", "Cod. Cuenta", "Nombre Cuenta", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabladatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabladatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabladatos);
        if (tabladatos.getColumnModel().getColumnCount() > 0) {
            tabladatos.getColumnModel().getColumn(0).setPreferredWidth(180);
            tabladatos.getColumnModel().getColumn(1).setPreferredWidth(75);
            tabladatos.getColumnModel().getColumn(2).setPreferredWidth(120);
            tabladatos.getColumnModel().getColumn(3).setPreferredWidth(50);
            tabladatos.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        btnaceptar.setText("Aceptar");
        btnaceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaceptarActionPerformed(evt);
            }
        });

        btncuenta.setText("Cuentas");
        btncuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncuentaActionPerformed(evt);
            }
        });

        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        lblactivar.setText("Activa enlace contable");

        cbtipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Factura compra", "Factura venta", "Cuentas por pagar", "Cuentas por cobrar", "Rol de Pagos", "Anticipos", "Cheques por pagar", "Cheques por Cobrar", "Nuevo Banco" }));
        cbtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtipoActionPerformed(evt);
            }
        });

        btnayuda1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_integrador/imagenes/ayudas.jpg"))); // NOI18N
        btnayuda1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnayuda1MouseClicked(evt);
            }
        });
        btnayuda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnayuda1ActionPerformed(evt);
            }
        });
        btnayuda1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnayuda1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnaceptar)
                                .addGap(18, 18, 18)
                                .addComponent(btncuenta)
                                .addGap(18, 18, 18)
                                .addComponent(btncancelar)))
                        .addContainerGap(114, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lblactivar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(rdsi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdno)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnayuda1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnayuda1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblactivar)
                    .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdsi)
                    .addComponent(rdno))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private String matrix[][] = new String[10][5];
    DefaultTableModel modelo = new DefaultTableModel();
    private void cbtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtipoActionPerformed

        conec.conectar();

        tabladatos.setModel(modelo);
        for (int i = 0; i < tabladatos.getRowCount(); i++) {
            for (int j = 0; j < tabladatos.getColumnCount(); j++) {

                tabladatos.setValueAt("", i, j);
            }
        }

        String existe = conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "'", "nom_pcontabiidad");
        if ("".equals(existe)) {
            if (cbtipo.getSelectedIndex() == 0) {
                matrix[0][0] = "Compras";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "X";
                matrix[0][4] = "";
                matrix[1][0] = "Iva Compras";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "X";
                matrix[1][4] = "";
                matrix[2][0] = "Efectivo";
                matrix[2][1] = "";
                matrix[2][2] = "";
                matrix[2][3] = "";
                matrix[2][4] = "";
                matrix[3][0] = "Credito";
                matrix[3][1] = "";
                matrix[3][2] = "";
                matrix[3][3] = "";
                matrix[3][4] = "X";
                matrix[4][0] = "Cheque";
                matrix[4][1] = "";
                matrix[4][2] = "";
                matrix[4][3] = "";
                matrix[4][4] = "X";

                for (int i = 0; i < 5; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 1) {
                matrix[0][0] = "Ventas";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "";
                matrix[0][4] = "X";
                matrix[1][0] = "Iva Ventas";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "";
                matrix[1][4] = "X";
                matrix[2][0] = "Efectivo";
                matrix[2][1] = "";
                matrix[2][2] = "";
                matrix[2][3] = "X";
                matrix[2][4] = "";
                matrix[3][0] = "Credito";
                matrix[3][1] = "";
                matrix[3][2] = "";
                matrix[3][3] = "X";
                matrix[3][4] = "";
                matrix[4][0] = "Cheque";
                matrix[4][1] = "";
                matrix[4][2] = "";
                matrix[4][3] = "X";
                matrix[4][4] = "";

                for (int i = 0; i < 5; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 2) {
                matrix[0][0] = "Cuentas por pagar";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "X";
                matrix[0][4] = "";
                matrix[1][0] = "Efectivo";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "";
                matrix[1][4] = "X";
                matrix[2][0] = "Cheque";
                matrix[2][1] = "";
                matrix[2][2] = "";
                matrix[2][3] = "";
                matrix[2][4] = "X";

                for (int i = 0; i < 3; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 3) {
                matrix[0][0] = "Cuentas por Cobrar";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "";
                matrix[0][4] = "X";
                matrix[1][0] = "Efectivo";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "X";
                matrix[1][4] = "";
                matrix[2][0] = "Cheque";
                matrix[2][1] = "";
                matrix[2][2] = "";
                matrix[2][3] = "X";
                matrix[2][4] = "";

                for (int i = 0; i < 3; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 4) {
                matrix[0][0] = "Gasto Sueldo";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "X";
                matrix[0][4] = "";
                matrix[1][0] = "Gasto Aporte Patronal";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "X";
                matrix[1][4] = "";
                matrix[2][0] = "Aporte Patronal por Pagar";
                matrix[2][1] = "";
                matrix[2][2] = "";
                matrix[2][3] = "";
                matrix[2][4] = "X";
                matrix[3][0] = "Retencion Aporte Personal";
                matrix[3][1] = "";
                matrix[3][2] = "";
                matrix[3][3] = "";
                matrix[3][4] = "X";
                matrix[4][0] = "Anticipo Quincena";
                matrix[4][1] = "";
                matrix[4][2] = "";
                matrix[4][3] = "";
                matrix[4][4] = "X";
                matrix[5][0] = "Cheque";
                matrix[5][1] = "";
                matrix[5][2] = "";
                matrix[5][3] = "";
                matrix[5][4] = "X";
                for (int i = 0; i < 6; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 5) {
                matrix[0][0] = "Anticipos";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "X";
                matrix[0][4] = "";
                matrix[1][0] = "Bancos";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "";
                matrix[1][4] = "X";
                for (int i = 0; i < 2; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 6) {
                matrix[0][0] = "Documento por pagar";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "X";
                matrix[0][4] = "";
                matrix[1][0] = "Bancos";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "";
                matrix[1][4] = "X";
                for (int i = 0; i < 2; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 7) {
                matrix[0][0] = "Documentos por cobrar";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "";
                matrix[0][4] = "X";
                matrix[1][0] = "Bancos";
                matrix[1][1] = "";
                matrix[1][2] = "";
                matrix[1][3] = "X";
                matrix[1][4] = "";
                for (int i = 0; i < 2; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            } else if (cbtipo.getSelectedIndex() == 8) {
                matrix[0][0] = "Nuevo Banco";
                matrix[0][1] = "";
                matrix[0][2] = "";
                matrix[0][3] = "";
                matrix[0][4] = "";
                for (int i = 0; i < 1; i++) {
                    for (int j = 0; j < 5; j++) {
                        tabladatos.setValueAt(matrix[i][j], i, j);
                    }
                }
            }
        } else {
            String columnas[] = {"Codigo", "Descripcion", "Cod. Cuenta", "Nombre Cuenta", "debe", "haber"};

            tabladatos.setModel(conec.consultaget("select cod_cparamentro,descripcion,cod_cuenta,nombre_cuenta,debe,haber from cparametros where cod_pcontabilidad='" + conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "'", "cod_pcontabiidad") + "'", columnas));
        }
        conec.desconectar();
    }//GEN-LAST:event_cbtipoActionPerformed
    private conexion conec = new conexion();
    private void btnaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaceptarActionPerformed
        conec.conectar();
        try {
            if (rdsi.isSelected()) {
                int valor = 0, filas = 0;
                for (int i = 0; i < tabladatos.getRowCount(); i++) {
                    if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                        filas++;
                    }
                }
                for (int i = 0; i < filas; i++) {
                    if ("".equals(tabladatos.getValueAt(i, 1).toString())) {
                        valor++;
                    }
                }
                if (valor == 0) {

                    String existe = conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "'", "nom_pcontabiidad");
                    filas = 0;
                    if ("".equals(existe)) {
                        conec.consultaset("INSERT INTO `alexanderflower`.`pcontabiidad` (`nom_pcontabiidad`, `estado_pcontabilidad`) VALUES ('" + cbtipo.getSelectedItem().toString() + "', 1);");
                        for (int i = 0; i < 7; i++) {
                            if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                                filas++;
                            }
                        }
                        for (int i = 0; i < filas; i++) {

                            conec.consultaset("INSERT INTO `alexanderflower`.`cparametros` (`descripcion`, `cod_cuenta`, `nombre_cuenta`, `debe`, `haber`, `cod_pcontabilidad`) VALUES ('" + tabladatos.getValueAt(i, 0).toString() + "', '" + tabladatos.getValueAt(i, 1).toString() + "', '" + tabladatos.getValueAt(i, 2).toString() + "', '" + tabladatos.getValueAt(i, 3).toString() + "', '" + tabladatos.getValueAt(i, 4).toString() + "', " + conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "' ", "cod_pcontabiidad") + ");");
                        }
                    } else {
                        for (int i = 0; i < tabladatos.getRowCount(); i++) {
                            if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                                filas++;
                            }
                        }
                        for (int i = 0; i < filas; i++) {
                            conec.consultaset("UPDATE `alexanderflower`.`pcontabiidad` SET `estado_pcontabilidad`=1 WHERE `cod_pcontabiidad`='" + conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "' ", "cod_pcontabiidad") + "';");
                            conec.consultaset("UPDATE `alexanderflower`.`cparametros` SET `descripcion`='" + tabladatos.getValueAt(i, 1) + "', `cod_cuenta`='" + tabladatos.getValueAt(i, 2) + "', `nombre_cuenta`='" + tabladatos.getValueAt(i, 3) + "', `debe`='" + tabladatos.getValueAt(i, 4) + "', `haber`='" + tabladatos.getValueAt(i, 5) + "' WHERE `cod_cparamentro`='" + tabladatos.getValueAt(i, 0) + "';");
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Para Guardar vincule las cuentas");
                }
            } else if (rdno.isSelected()) {
                int valor = 0, filas = 0;
                for (int i = 0; i < tabladatos.getRowCount(); i++) {
                    if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                        filas++;
                    }
                }
                for (int i = 0; i < filas; i++) {
                    if ("".equals(tabladatos.getValueAt(i, 1).toString())) {
                        valor++;
                    }
                }
                if (valor == 0) {

                    String existe = conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "'", "nom_pcontabiidad");
                    filas = 0;
                    if ("".equals(existe)) {
                        conec.consultaset("INSERT INTO `alexanderflower`.`pcontabiidad` (`nom_pcontabiidad`, `estado_pcontabilidad`) VALUES ('" + cbtipo.getSelectedItem().toString() + "', 0);");
                        for (int i = 0; i < 7; i++) {
                            if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                                filas++;
                            }
                        }
                        for (int i = 0; i < filas; i++) {

                            conec.consultaset("INSERT INTO `alexanderflower`.`cparametros` (`descripcion`, `cod_cuenta`, `nombre_cuenta`, `debe`, `haber`, `cod_pcontabilidad`) VALUES ('" + tabladatos.getValueAt(i, 0).toString() + "', '" + tabladatos.getValueAt(i, 1).toString() + "', '" + tabladatos.getValueAt(i, 2).toString() + "', '" + tabladatos.getValueAt(i, 3).toString() + "', '" + tabladatos.getValueAt(i, 4).toString() + "', " + conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "' ", "cod_pcontabiidad") + ");");
                        }
                    } else {
                        for (int i = 0; i < tabladatos.getRowCount(); i++) {
                            if (!"".equals(tabladatos.getValueAt(i, 0).toString())) {
                                filas++;
                            }
                        }
                        for (int i = 0; i < filas; i++) {
                            conec.consultaset("UPDATE `alexanderflower`.`pcontabiidad` SET `estado_pcontabilidad`=0 WHERE `cod_pcontabiidad`='" + conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='" + cbtipo.getSelectedItem().toString() + "' ", "cod_pcontabiidad") + "';");

                            conec.consultaset("UPDATE `alexanderflower`.`cparametros` SET `descripcion`='" + tabladatos.getValueAt(i, 1) + "', `cod_cuenta`='" + tabladatos.getValueAt(i, 2) + "', `nombre_cuenta`='" + tabladatos.getValueAt(i, 3) + "', `debe`='" + tabladatos.getValueAt(i, 4) + "', `haber`='" + tabladatos.getValueAt(i, 5) + "' WHERE `cod_cparamentro`='" + tabladatos.getValueAt(i, 0) + "';");
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Para Guardar vincule las cuentas");
                }
            }

        } catch (java.lang.NullPointerException jn) {

        }
        conec.desconectar();
    }//GEN-LAST:event_btnaceptarActionPerformed
    private void cargar() {
        modelo = (DefaultTableModel) tabladatos.getModel();
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened
    controlformularios cen = new controlformularios();
    private void btncuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncuentaActionPerformed
        listar_cuentas lc = new listar_cuentas();
        dialogo jd = new dialogo(lc, true);
        jd.setContentPane(lc.getContentPane());
        jd.pack();
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        if (tabladatos.getColumnCount() == 5) {
            tabladatos.setValueAt(lc.codigoget(), index, 1);
            tabladatos.setValueAt(lc.cuentaget(), index, 2);
        }
        if (tabladatos.getColumnCount() == 6) {
            tabladatos.setValueAt(lc.codigoget(), index, 2);
            tabladatos.setValueAt(lc.cuentaget(), index, 3);
        }
    }//GEN-LAST:event_btncuentaActionPerformed

    private void tabladatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabladatosMouseClicked
        index = tabladatos.getSelectedRow();
    }//GEN-LAST:event_tabladatosMouseClicked

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btnayuda1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnayuda1MouseClicked
        try {
            oayuda ay = new oayuda();
            ay.opena("Manual.pdf");
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_btnayuda1MouseClicked

    private void btnayuda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnayuda1ActionPerformed

    }//GEN-LAST:event_btnayuda1ActionPerformed

    private void btnayuda1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnayuda1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            try {
                oayuda ay = new oayuda();
                ay.opena("Manual.pdf");
            } catch (IOException ex) {
            }
        }
    }//GEN-LAST:event_btnayuda1KeyPressed
    private int index = 0;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new configuraciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaceptar;
    private javax.swing.JButton btnayuda;
    private javax.swing.JButton btnayuda1;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btncuenta;
    private javax.swing.JComboBox cbtipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblactivar;
    private javax.swing.JRadioButton rdno;
    private javax.swing.ButtonGroup rdradios;
    private javax.swing.JRadioButton rdsi;
    private javax.swing.JTable tabladatos;
    // End of variables declaration//GEN-END:variables
}
