/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facturacion;

import clases.controlformularios;
import clases.productosin;
import clientes.buscarc;
import clientes.buscare;
import clientes.buscarp;
import clientes.clientesprov;
import clientes.modielip;
import cuentas_cobrar.pagosxcobrar;
import cuentas_cobrar.reciboxcobrar;
import cuentascorrientes.elegircuenta;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import productos.buscarpro;
import proyecto_integrador.conexion;
import proyecto_integrador.dialogo;
import proyecto_integrador.imagenes;
import proyecto_integrador.panel;

/**
 *
 * @author WINDOWS
 */
public class facturaventa extends javax.swing.JFrame implements Printable {

    public static int estadofa, x = 0;

    /**
     * Creates new form facturacompra
     */
    public facturaventa() {
        initComponents();
        controlformularios cen = new controlformularios();
        this.setBounds(cen.xget(this.getWidth()), cen.yget(this.getHeight()), this.getWidth(), this.getHeight());
        desactiva();
        dctransaccion.setDate(fechaac);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdradios = new javax.swing.ButtonGroup();
        panel3 = new org.edisoncor.gui.panel.Panel();
        jLabel3 = new javax.swing.JLabel();
        lblempresa = new org.edisoncor.gui.label.LabelMetric();
        lbltransaccion = new javax.swing.JLabel();
        dctransaccion = new com.toedter.calendar.JDateChooser();
        lblrucempresa = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblapellidos = new javax.swing.JLabel();
        lblemail = new javax.swing.JLabel();
        txtdireccion = new javax.swing.JTextField();
        lbldireccion = new javax.swing.JLabel();
        btncodiigo = new javax.swing.JButton();
        txtemail = new javax.swing.JTextField();
        txtapellidos = new javax.swing.JTextField();
        txtnombres = new javax.swing.JTextField();
        txtrucedula = new javax.swing.JTextField();
        lblrucedula = new javax.swing.JLabel();
        lblproveedor = new javax.swing.JLabel();
        lblnombres = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblfactura = new javax.swing.JLabel();
        lblnumerof = new javax.swing.JLabel();
        lblautorizacion = new javax.swing.JLabel();
        lblfacturacion = new javax.swing.JLabel();
        lblvencimiento = new javax.swing.JLabel();
        dcfecha = new com.toedter.calendar.JDateChooser();
        txtautorizacion = new javax.swing.JTextField();
        txtnumerof = new javax.swing.JTextField();
        txtfactura = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladatos = new javax.swing.JTable();
        txttotal = new javax.swing.JTextField();
        lblsubtotal = new javax.swing.JLabel();
        lbliva = new javax.swing.JLabel();
        lbldescuento = new javax.swing.JLabel();
        lbltotal = new javax.swing.JLabel();
        txtsubtotal = new javax.swing.JTextField();
        txtiva = new javax.swing.JTextField();
        txtdescuento = new javax.swing.JTextField();
        btnproductos = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnaceptar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tatobservaciones = new javax.swing.JTextArea();
        cbimprimir = new javax.swing.JCheckBox();
        cbtermino = new javax.swing.JComboBox();
        lbltermino = new javax.swing.JLabel();
        lblvalor = new javax.swing.JLabel();
        txtvalor = new javax.swing.JTextField();
        txtreferencia = new javax.swing.JTextField();
        lblreferencia = new javax.swing.JLabel();
        lblcheque = new javax.swing.JLabel();
        txtcheque = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panel3.setColorPrimario(new java.awt.Color(204, 255, 204));
        panel3.setColorSecundario(new java.awt.Color(255, 153, 0));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientes/portada.jpg"))); // NOI18N

        lblempresa.setForeground(new java.awt.Color(51, 51, 255));
        lblempresa.setText("FACTURA VENTA ");
        lblempresa.setColorDeSombra(new java.awt.Color(255, 255, 255));
        lblempresa.setFont(new java.awt.Font("DS-Digital", 1, 48)); // NOI18N

        lbltransaccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbltransaccion.setText("Fecha de Transaccion");

        lblrucempresa.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblrucempresa.setText("Ruc Empresa:");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        lblapellidos.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblapellidos.setText("Apellidos Cliente");

        lblemail.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblemail.setText("Email");

        txtdireccion.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        lbldireccion.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lbldireccion.setText("Direccion");

        btncodiigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_integrador/imagenes/11111111111111.jpg"))); // NOI18N
        btncodiigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncodiigoActionPerformed(evt);
            }
        });

        txtemail.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtapellidos.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtnombres.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtrucedula.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        txtrucedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrucedulaActionPerformed(evt);
            }
        });
        txtrucedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtrucedulaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrucedulaKeyReleased(evt);
            }
        });

        lblrucedula.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblrucedula.setText("Núm ° Cédula,Ruc");

        lblproveedor.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblproveedor.setText("Información Cliente");

        lblnombres.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblnombres.setText("Nombres Cliente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblrucedula)
                            .addComponent(lblnombres)
                            .addComponent(lblapellidos)
                            .addComponent(lbldireccion)
                            .addComponent(lblemail))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtrucedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnombres, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtapellidos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(lblproveedor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btncodiigo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblproveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblrucedula)
                            .addComponent(txtrucedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btncodiigo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblnombres))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblapellidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtapellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lbldireccion)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        lblfactura.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblfactura.setText("Factura: ");

        lblnumerof.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblnumerof.setText("Número de Factura:");

        lblautorizacion.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblautorizacion.setText("Aut. SRI:");

        lblfacturacion.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblfacturacion.setText("Facturación del Empresa");

        lblvencimiento.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblvencimiento.setText("Fecha de Vencimiento");

        txtautorizacion.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        txtautorizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtautorizacionActionPerformed(evt);
            }
        });

        txtnumerof.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtfactura.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblvencimiento)
                    .addComponent(lblautorizacion)
                    .addComponent(lblnumerof)
                    .addComponent(lblfactura))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dcfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(txtautorizacion)
                    .addComponent(txtnumerof)
                    .addComponent(txtfactura))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblfacturacion)
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lblfacturacion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblfactura, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblnumerof)
                        .addGap(18, 18, 18)
                        .addComponent(lblautorizacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblvencimiento))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtfactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtnumerof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtautorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dcfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabladatos.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        tabladatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Descripción", "Cantidad", "Unidad Precio", "SubTotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabladatos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabladatosFocusLost(evt);
            }
        });
        tabladatos.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                tabladatosHierarchyChanged(evt);
            }
        });
        tabladatos.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tabladatosInputMethodTextChanged(evt);
            }
        });
        tabladatos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabladatosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabladatos);

        txttotal.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });

        lblsubtotal.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lblsubtotal.setText("SubTotal");

        lbliva.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lbliva.setText("IVA");

        lbldescuento.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lbldescuento.setText("Descuento");

        lbltotal.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lbltotal.setText("Total");

        txtsubtotal.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtiva.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        txtdescuento.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N

        btnproductos.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        btnproductos.setText("Productos");
        btnproductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproductosActionPerformed(evt);
            }
        });

        btneliminar.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnaceptar.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        btnaceptar.setText("Aceptar");
        btnaceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaceptarActionPerformed(evt);
            }
        });

        btncancelar.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        jButton1.setText("Imprimir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tatobservaciones.setColumns(20);
        tatobservaciones.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        tatobservaciones.setRows(5);
        tatobservaciones.setText("Observaciones:");
        tatobservaciones.setToolTipText("Detalle el tipo de compra ");
        jScrollPane2.setViewportView(tatobservaciones);

        cbimprimir.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        cbimprimir.setText("Imprimir documento");

        cbtermino.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        cbtermino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Cheque", "Credito", "Cheque y Efectivo", "Cheque y Credito" }));
        cbtermino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbterminoFocusLost(evt);
            }
        });
        cbtermino.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                cbterminoCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cbterminoInputMethodTextChanged(evt);
            }
        });
        cbtermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbterminoActionPerformed(evt);
            }
        });
        cbtermino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbterminoKeyPressed(evt);
            }
        });

        lbltermino.setFont(new java.awt.Font("Adobe Caslon Pro", 0, 14)); // NOI18N
        lbltermino.setText("Termino");

        lblvalor.setText("Valor");

        txtvalor.setText("0");
        txtvalor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtvalorMouseClicked(evt);
            }
        });
        txtvalor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtvalorActionPerformed(evt);
            }
        });

        lblreferencia.setText("Referencia");

        lblcheque.setText("Nro Cheque");

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(180, 180, 180))
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(lbltransaccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dctransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(lblrucempresa)
                        .addGap(205, 205, 205))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel3Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panel3Layout.createSequentialGroup()
                                                .addComponent(lblcheque)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtcheque, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(cbimprimir))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(panel3Layout.createSequentialGroup()
                                                .addComponent(lblvalor)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panel3Layout.createSequentialGroup()
                                                .addComponent(lbltermino)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbtermino, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(lblreferencia)
                                        .addGap(23, 23, 23)
                                        .addComponent(txtreferencia)))
                                .addGap(47, 47, 47)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                                        .addComponent(lbldescuento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(lbltotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbliva)
                                            .addComponent(lblsubtotal))
                                        .addGap(19, 19, 19)))
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtdescuento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtiva, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtsubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnproductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btneliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnaceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel3Layout.createSequentialGroup()
                    .addGap(379, 379, 379)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(557, Short.MAX_VALUE)))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(lblempresa, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dctransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltransaccion)
                    .addComponent(lblrucempresa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblsubtotal)
                                    .addComponent(txtsubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbliva))
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(lbldescuento))
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtdescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbltotal)))))
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(cbimprimir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblcheque)
                                            .addComponent(txtcheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbtermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(panel3Layout.createSequentialGroup()
                                                .addComponent(lbltermino, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)
                                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblvalor))))
                                        .addGap(3, 3, 3)))
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtreferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblreferencia)))))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btnproductos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel3Layout.createSequentialGroup()
                    .addGap(413, 413, 413)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(205, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btncodiigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncodiigoActionPerformed
        clientesprov.verme = 100;
        estadofa = 1;
        buscarc cliente = new buscarc();
        dialogo jd = new dialogo(cliente, true);
        jd.setContentPane(cliente.getContentPane());
        jd.pack();
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        estadofa = 0;
        txtrucedula.setText(buscarc.cedula);
        enlace();
    }//GEN-LAST:event_btncodiigoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened
    private Date fechaac = new Date();
    private void btnproductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproductosActionPerformed
        estadofa = 1;
        productove cliente = new productove();
        estadofa = 0;
        dialogo jd = new dialogo(cliente, true);
        jd.setContentPane(cliente.getContentPane());
        jd.pack();
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        for (int i = 0; i < carrito1.aumentoget(); i++) {
            for (int j = 0; j < 5; j++) {
                tabladatos.setValueAt(carrito1.datosget(i, j), i, j);
            }
        }

    }//GEN-LAST:event_btnproductosActionPerformed

    private void tabladatosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabladatosFocusLost
        actualizar();
    }//GEN-LAST:event_tabladatosFocusLost

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        try {
            String i = (String) tabladatos.getValueAt(tabladatos.getSelectedRow(), 0);
            if (i != null) {
                carrito1.eliminado(tabladatos.getSelectedRow());
                DefaultTableModel modelo = (DefaultTableModel) tabladatos.getModel();
                modelo.removeRow(tabladatos.getSelectedRow());
                modelo.addRow(new Object[]{"", "", "", "", ""});
                tabladatos.setModel(modelo);
                x--;
            }

        } catch (java.lang.NegativeArraySizeException a) {
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
    }//GEN-LAST:event_btneliminarActionPerformed
    private void actualizar() {

        for (int i = 0; i < carrito1.aumentoget() - 1; i++) {
            for (int j = 0; j < 5; j++) {
                if (j == 2) {
                    conec.conectar();
                    int total = conec.consultac1get("select * from productos where cod_producto='" + tabladatos.getValueAt(i, 0).toString() + "'", "cantidadmi_producto");
                    int actual = conec.consultac1get("select * from productos where cod_producto='" + tabladatos.getValueAt(i, 0).toString() + "'", "cantidadi_producto");
                    System.out.println("" + total);
                    if (total != 0) {
                        int cantidad = Integer.parseInt(tabladatos.getValueAt(i, 2).toString());
                        if (cantidad > actual - total) {
                            tabladatos.setValueAt("1", i, 2);
                            JOptionPane.showMessageDialog(this, "la centidad que requiere no existe en bodega");
                        }
                    } else {
                        int cantidad = Integer.parseInt(tabladatos.getValueAt(i, 2).toString());
                        if (cantidad > actual) {
                            tabladatos.setValueAt("1", i, 2);
                            JOptionPane.showMessageDialog(this, "la centidad que requiere no existe en bodega");
                        }
                    }
                    conec.desconectar();
                }
                carrito1.datosset(tabladatos.getValueAt(i, j).toString(), i, j);

                calculo();
            }

        }
    }
    private void tabladatosInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tabladatosInputMethodTextChanged
    }//GEN-LAST:event_tabladatosInputMethodTextChanged

    private void tabladatosHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_tabladatosHierarchyChanged
    }//GEN-LAST:event_tabladatosHierarchyChanged

    private void tabladatosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabladatosKeyPressed
    }//GEN-LAST:event_tabladatosKeyPressed

    private void txtautorizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtautorizacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtautorizacionActionPerformed

    private void btnaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaceptarActionPerformed
        int seleccion = JOptionPane.showOptionDialog(this, "¿Confimar Guardado de Factura", "Guardar Factura", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si", "No"}, "Si");
        if (seleccion == 0) {
            int año = dctransaccion.getCalendar().get(Calendar.YEAR);
            int mes = dctransaccion.getCalendar().get(Calendar.MONTH) + 1;
            int dia = dctransaccion.getCalendar().get(Calendar.DAY_OF_MONTH);
            conec.conectar();
            int termin = conec.consultac1get("select * from terminos_pagos where descripcion_termino='" + cbtermino.getSelectedItem().toString() + "'", "cod_pago");
            String consulta = "INSERT INTO `alexanderflower`.`facturasve` (`cod_facturave`, `numero_facturave`, `numero_cliente`, `fecha_emision`, `observacion_facturave`, `subtotal_facturave`, `iva_facturave`, `descuento_facturave`, `total_facturave`, `estado_facturave`, `termino_pago`) VALUES ('" + txtfactura.getText() + "', '" + txtnumerof.getText() + "', '" + txtrucedula.getText().substring(0, 10) + "', '" + año + "-" + mes + "-" + dia + "', '" + tatobservaciones.getText() + "', '" + txtsubtotal.getText() + "', '" + txtiva.getText() + "', '" + txtdescuento.getText() + "', '" + txttotal.getText() + "', '1', '" + termin + "');";
            conec.consultaset(consulta);
            for (int i = 0; i < carrito1.aumentoget() - 1; i++) {
                int cantidad = conec.consultac1get("select * from productos where nombre_producto like '%" + tabladatos.getValueAt(i, 1).toString() + "%' ", "cantidadi_producto");
                cantidad = cantidad - Integer.parseInt(tabladatos.getValueAt(i, 2).toString());
                conec.consultaset("UPDATE `alexanderflower`.`productos` SET `cantidadi_producto`='" + cantidad + "' WHERE `cod_producto`='" + tabladatos.getValueAt(i, 0).toString() + "';");
                conec.consultaset("INSERT INTO `alexanderflower`.`detalle_facturave` (`cantidad_detalle`, `cod_producto`, `producto_detalle`, `valor_unitario`, `valor_total`, `cod_facturave`) VALUES (" + tabladatos.getValueAt(i, 2).toString() + ", " + tabladatos.getValueAt(i, 0).toString() + ", '" + tabladatos.getValueAt(i, 1).toString() + "', " + tabladatos.getValueAt(i, 3).toString() + ", " + tabladatos.getValueAt(i, 4).toString() + "," + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
            }
            año = dcfecha.getCalendar().get(Calendar.YEAR);
            mes = dcfecha.getCalendar().get(Calendar.MONTH) + 1;
            dia = dcfecha.getCalendar().get(Calendar.DAY_OF_MONTH);
            conec.consultaset("UPDATE `alexanderflower`.`empresa` SET `fechacaducidadf_empresa`='" + año + "-" + mes + "-" + dia + "' WHERE `cod_empresa`='" + conec.consultac2get("select * from empresa order by cod_empresa desc limit 1", "cod_empresa") + "';");
            termino = cbtermino.getSelectedItem().toString();
            monto = Double.parseDouble(txttotal.getText());
            año = dctransaccion.getCalendar().get(Calendar.YEAR);
            mes = dctransaccion.getCalendar().get(Calendar.MONTH) + 1;
            dia = dctransaccion.getCalendar().get(Calendar.DAY_OF_MONTH);
//            conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `haber`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta1 where nombre_subcuenta1='VENTAS'", "cod_subcuenta1") + "', 'VENTAS', " + txtsubtotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
//            conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `haber`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta2 where nombre_subcuenta2='IVA VENTAS'", "cod_subcuenta2") + "', 'IVA VENTAS', " + txtiva.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
//            if ("efectivo".equals(cbtermino.getSelectedItem().toString())) {
//                conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta2 where nombre_subcuenta2='CAJA'", "cod_subcuenta2") + "', 'CAJA', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
//
//            } else if ("Cheque".equals(cbtermino.getSelectedItem().toString())) {
//                conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta3 where nombre_subcuenta3='CUENTA CORRIENTE'", "cod_subcuenta3") + "', 'CUENTA CORRIENTE', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
//                conec.consultaset("INSERT INTO `alexanderflower`.`cheques` (`num_cuenta`, `num_cheque`, `monto_cheque`, `fecha_cheque`, `paguese_cheque`, `tipo_cheque`, `referencia_cheque`, `estado_cheque`) VALUES ('" + elegircuenta.ncuenta + "', '" + txtcheque.getText() + "', '" + txttotal.getText() + "', '" + año + "-" + mes + "-" + dia + "', '" + buscarc.cedula + "', '1', '" + txtreferencia.getText() + "', '1');");
//
//            } else if (!"efectivo".equals(cbtermino.getSelectedItem().toString()) && !"Cheque".equals(cbtermino.getSelectedItem().toString())) {
//                conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta2 where nombre_subcuenta2='CUENTAS X COBRAR'", "cod_subcuenta2") + "', 'CUENTAS X COBRAR', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
//
//            }
//            terminos nu = new terminos();
//            dialogo jd = new dialogo(nu, true);
//            jd.setContentPane(nu.getContentPane());
//            jd.pack();
//            jd.setLocationRelativeTo(null);
//            jd.setVisible(true);
            if ("true".equals(conec.consultac2get("select * from pcontabiidad where nom_pcontabiidad='Factura venta'", "estado_pcontabilidad"))) {
                conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `haber`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Ventas')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Ventas')", "nombre_cuenta") + "', " + txtsubtotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `haber`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Iva Ventas')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Iva Ventas')", "nombre_cuenta") + "', " + txtiva.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                if ("Efectivo".equals(cbtermino.getSelectedItem().toString())) {
                    conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Efectivo')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Efectivo')", "nombre_cuenta") + "', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                } else if ("Cheque".equals(cbtermino.getSelectedItem().toString())) {
                    monto = Double.parseDouble(txttotal.getText());
                    if ("BANCOS".equals(conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "nombre_cuenta"))) {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta3 s where s.nombre_subcuenta3='" + elegircuenta.ndes + "'", "cod_subcuenta3") + "', '" + elegircuenta.ndes + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                        conec.consultaset("INSERT INTO `alexanderflower`.`cheques` (`num_cuenta`, `num_cheque`, `monto_cheque`, `fecha_cheque`, `paguese_cheque`, `tipo_cheque`, `referencia_cheque`, `estado_cheque`) VALUES ('" + elegircuenta.ncuenta + "', '" + txtcheque.getText() + "', '" + monto + "', '" + año + "-" + mes + "-" + dia + "', '" + buscarc.cedula + "', '2', '" + txtreferencia.getText() + "', '1');");

                    } else {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "nombre_cuenta") + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");

                    }

                } else if ("Credito".equals(cbtermino.getSelectedItem().toString())) {
                    monto = Double.parseDouble(txttotal.getText());
                    conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Credito')", "cod_cuenta") + "','" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Credito')", "nombre_cuenta") + "', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                    terminos nu = new terminos();
                    dialogo jd = new dialogo(nu, true);
                    jd.setContentPane(nu.getContentPane());
                    jd.pack();
                    jd.setLocationRelativeTo(null);
                    jd.setVisible(true);
                } else if ("Cheque y Efectivo".equals(cbtermino.getSelectedItem().toString()) && !"Cheque".equals(cbtermino.getSelectedItem().toString())) {
                    monto = Double.parseDouble(txttotal.getText()) - Double.parseDouble(txtvalor.getText());
                    if ("BANCOS".equals(conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura compra' and c.descripcion='Cheque')", "nombre_cuenta"))) {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta3 s where s.nombre_subcuenta3='" + elegircuenta.ndes + "'", "cod_subcuenta3") + "', '" + elegircuenta.ndes + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                        conec.consultaset("INSERT INTO `alexanderflower`.`cheques` (`num_cuenta`, `num_cheque`, `monto_cheque`, `fecha_cheque`, `paguese_cheque`, `tipo_cheque`, `referencia_cheque`, `estado_cheque`) VALUES ('" + elegircuenta.ncuenta + "', '" + txtcheque.getText() + "', '" + monto + "', '" + año + "-" + mes + "-" + dia + "', '" + buscarc.cedula + "', '2', '" + txtreferencia.getText() + "', '1');");

                    } else {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "nombre_cuenta") + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");

                    }
                    conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Efectivo')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Efectivo')", "nombre_cuenta") + "', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");

                } else if ("Cheque y Credito".equals(cbtermino.getSelectedItem().toString()) && !"Cheque".equals(cbtermino.getSelectedItem().toString())) {
                    monto = Double.parseDouble(txttotal.getText()) - Double.parseDouble(txtvalor.getText());
                    if ("BANCOS".equals(conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura compra' and c.descripcion='Cheque')", "nombre_cuenta"))) {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from subcuenta3 s where s.nombre_subcuenta3='" + elegircuenta.ndes + "'", "cod_subcuenta3") + "', '" + elegircuenta.ndes + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                        conec.consultaset("INSERT INTO `alexanderflower`.`cheques` (`num_cuenta`, `num_cheque`, `monto_cheque`, `fecha_cheque`, `paguese_cheque`, `tipo_cheque`, `referencia_cheque`, `estado_cheque`) VALUES ('" + elegircuenta.ncuenta + "', '" + txtcheque.getText() + "', '" + monto + "', '" + año + "-" + mes + "-" + dia + "', '" + buscarc.cedula + "', '2', '" + txtreferencia.getText() + "', '1');");

                    } else {
                        conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "cod_cuenta") + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Cheque')", "nombre_cuenta") + "', " + monto + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");

                    }
                    conec.consultaset("INSERT INTO `alexanderflower`.`transacciones` (`fecha_trans`, `cod_cuenta`, `des_cuenta`, `debe`, `facturave`) VALUES ('" + año + "-" + mes + "-" + dia + "', '" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Credito')", "cod_cuenta") + "','" + conec.consultac2get("select * from pcontabiidad p,cparametros c where p.cod_pcontabiidad=p.cod_pcontabiidad and(p.nom_pcontabiidad='Factura venta' and c.descripcion='Credito')", "nombre_cuenta") + "', " + txttotal.getText() + ", " + conec.consultac2get("select codigo_fact from facturasve order by codigo_fact desc limit 1;", "codigo_fact") + ");");
                    terminos nu = new terminos();
                    dialogo jd = new dialogo(nu, true);
                    jd.setContentPane(nu.getContentPane());
                    jd.pack();
                    jd.setLocationRelativeTo(null);
                    jd.setVisible(true);
                }
            }
        }
        this.setVisible(false);

        conec.desconectar();
    }//GEN-LAST:event_btnaceptarActionPerformed

    private void txtrucedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrucedulaKeyReleased
    }//GEN-LAST:event_txtrucedulaKeyReleased
    private void desactiva() {
        txtnombres.setEnabled(false);
        txtapellidos.setEnabled(false);
        txtemail.setEnabled(false);
        txtdireccion.setEnabled(false);
        txtfactura.setEnabled(false);
        txtdireccion.setEnabled(false);
        txtautorizacion.setEnabled(false);
        dcfecha.setEnabled(false);
        txtsubtotal.setEnabled(false);
        txtiva.setEnabled(false);
        txtdescuento.setEnabled(false);
        txttotal.setEnabled(false);
        cbtermino.setEnabled(false);
    }
    private void txtrucedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrucedulaKeyPressed
        enlace();
    }//GEN-LAST:event_txtrucedulaKeyPressed
    private void enlace() {
        try {
            if (txtrucedula.getText().length() == 10) {
                conec.conectar();
                int verificar = conec.consultac1get("select count(*) from clientes where cedula_cliente like '%" + txtrucedula.getText() + "%' ", "count(*)");
                if (verificar != 0) {
                    String consulta = "select * from clientes where estado_cliente=1 and cedula_cliente like '%" + txtrucedula.getText() + "%'";
                    txtnombres.setText(conec.consultac2get(consulta, "nombres_cliente"));
                    txtapellidos.setText(conec.consultac2get(consulta, "apellidos_cliente"));
                    txtemail.setText(conec.consultac2get(consulta, "email_cliente"));
                    txtdireccion.setText(conec.consultac2get(consulta, "direccion_cliente"));
                    consulta = "select * from empresa";
                    lblrucempresa.setText(lblrucempresa.getText() + " " + conec.consultac2get(consulta, "ruc_empresa"));
                    txtfactura.setText(conec.consultac2get(consulta, "codigoms_empresa"));
                    txtautorizacion.setText(conec.consultac2get(consulta, "autorizacionsri_empresa"));
                    String fecha = conec.consultac2get(consulta, "fechacaducidadf_empresa");
                    SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                    Date nuevaFecha = formatoFecha.parse(fecha);
                    if (nuevaFecha.before(fechaac)) {
                        JOptionPane.showMessageDialog(this, "Actualice la fecha de facturacion del proveedor");
                        dcfecha.setEnabled(true);
                    }
                    dcfecha.setDate(nuevaFecha);

                }
                conec.desconectar();
            }
        } catch (ParseException ex) {
            Logger.getLogger(modielip.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void txtrucedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrucedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrucedulaActionPerformed
    /*/   public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
     if (pageIndex == 0)
     {
     Graphics2D g2d = (Graphics2D) graphics;
     g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
     this.printAll(graphics);
     return PAGE_EXISTS;
     }    
     else
     {
     return NO_SUCH_PAGE;     
     } 
       
     }/*/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        printerJob.setPrintable((Printable) this);

        if (printerJob.printDialog()) {
            try {
                printerJob.print();
            } catch (PrinterException ex) {
                System.out.println("Error\n" + ex);
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void cbterminoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbterminoFocusLost

    }//GEN-LAST:event_cbterminoFocusLost

    private void cbterminoCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cbterminoCaretPositionChanged

    }//GEN-LAST:event_cbterminoCaretPositionChanged

    private void cbterminoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cbterminoInputMethodTextChanged

    }//GEN-LAST:event_cbterminoInputMethodTextChanged

    private void cbterminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbterminoActionPerformed
        if ("Cheque".equals(cbtermino.getSelectedItem().toString())) {
            elegircuenta nu = new elegircuenta();
            dialogo jd = new dialogo(nu, true);
            jd.setContentPane(nu.getContentPane());
            jd.pack();
            jd.setLocationRelativeTo(null);
            jd.setVisible(true);
            lblcheque.setVisible(true);
            lblreferencia.setVisible(true);
            txtcheque.setVisible(true);
            txtreferencia.setVisible(true);
            lblvalor.setVisible(true);
            txtvalor.setVisible(true);
            conec.conectar();
            String nch = conec.consultac2get("SELECT * FROM cheques where num_cuenta='" + elegircuenta.ncuenta + "'", "num_cheque");
            String ceros = "";
            if ("".equals(nch)) {
                for (int i = 0; i < 9; i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + "1");
            } else {
                int nv = Integer.parseInt(nch);
                nch = Integer.toString(nv);
                nv++;
                for (int i = 0; i < 10 - nch.length(); i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + nv);
            }
            conec.desconectar();
        } else if ("Cheque y Credito".equals(cbtermino.getSelectedItem().toString())) {
            elegircuenta nu = new elegircuenta();
            dialogo jd = new dialogo(nu, true);
            jd.setContentPane(nu.getContentPane());
            jd.pack();
            jd.setLocationRelativeTo(null);
            jd.setVisible(true);
            lblcheque.setVisible(true);
            lblreferencia.setVisible(true);
            txtcheque.setVisible(true);
            txtreferencia.setVisible(true);
            lblvalor.setVisible(true);
            txtvalor.setVisible(true);
            conec.conectar();
            String nch = conec.consultac2get("SELECT * FROM cheques where num_cuenta='" + elegircuenta.ncuenta + "'", "num_cheque");
            String ceros = "";
            if ("".equals(nch)) {
                for (int i = 0; i < 9; i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + "1");
            } else {
                int nv = Integer.parseInt(nch);
                nch = Integer.toString(nv);
                nv++;
                for (int i = 0; i < 10 - nch.length(); i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + nv);
            }
            conec.desconectar();

        } else if ("Cheque y Efectivo".equals(cbtermino.getSelectedItem().toString())) {
            elegircuenta nu = new elegircuenta();
            dialogo jd = new dialogo(nu, true);
            jd.setContentPane(nu.getContentPane());
            jd.pack();
            jd.setLocationRelativeTo(null);
            jd.setVisible(true);
            lblcheque.setVisible(true);
            lblreferencia.setVisible(true);
            txtcheque.setVisible(true);
            txtreferencia.setVisible(true);
            lblvalor.setVisible(true);
            txtvalor.setVisible(true);
            conec.conectar();
            String nch = conec.consultac2get("SELECT * FROM cheques where num_cuenta='" + elegircuenta.ncuenta + "'", "num_cheque");
            String ceros = "";
            if ("".equals(nch)) {
                for (int i = 0; i < 9; i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + "1");
            } else {
                int nv = Integer.parseInt(nch);
                nch = Integer.toString(nv);
                nv++;
                for (int i = 0; i < 10 - nch.length(); i++) {
                    ceros = ceros + "0";
                }
                txtcheque.setText(ceros + nv);
            }
            conec.desconectar();
        } else {
            lblcheque.setVisible(false);
            lblreferencia.setVisible(false);
            txtcheque.setVisible(false);
            txtreferencia.setVisible(false);
            lblvalor.setVisible(false);
            txtvalor.setVisible(false);
        }
    }//GEN-LAST:event_cbterminoActionPerformed

    private void cbterminoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbterminoKeyPressed

    }//GEN-LAST:event_cbterminoKeyPressed

    private void txtvalorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtvalorMouseClicked
        if (Double.parseDouble(txtvalor.getText()) > Double.parseDouble(txttotal.getText())) {
            JOptionPane.showMessageDialog(this, "El valor exede al valor total");
        } else {
            conec.conectar();
            String val = conec.consultac2get("select saldo_cuentacorr from cuentascorr where num_cuentacorr='" + elegircuenta.ncuenta + "'", "saldo_cuentacorr");
            conec.desconectar();
            if (Double.parseDouble(txttotal.getText()) > Double.parseDouble(val)) {
                JOptionPane.showMessageDialog(this, "Saldo Insuficiente ");
                cbtermino.setSelectedIndex(0);
                txtvalor.setText("0");
            }
        }
    }//GEN-LAST:event_txtvalorMouseClicked

    private void txtvalorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtvalorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvalorActionPerformed
    public static String termino;
    public static double monto;
    private final conexion conec = new conexion();
    public static final productosin carrito1 = new productosin();

    private void calculo() {
        conec.conectar();
        double suma = 0, descsuma = 0, ivasuma = 0;
        String iva = conec.consultac2get("select * from parametros", "iva");
        if (!"".equals(iva)) {
            ivasuma = Integer.parseInt(iva);
        }
        cbtermino.setEnabled(true);
        for (int i = 0; i < carrito1.aumentoget() - 1; i++) {

            double cantidad = Double.parseDouble(tabladatos.getValueAt(i, 2).toString());
            double subtotal = Double.parseDouble(tabladatos.getValueAt(i, 3).toString());
            double descuento = 0;
            tabladatos.setValueAt(conec.redondear((cantidad * subtotal) + (((cantidad * subtotal) * descuento) / 100)), i, 4);
            suma = suma + Double.parseDouble(tabladatos.getValueAt(i, 4).toString());
            descsuma = descsuma + ((suma * descuento) / 100);
            txtsubtotal.setText("" + conec.redondear(suma));
            txtiva.setText("" + conec.redondear((suma * ivasuma) / 100));
            txtdescuento.setText("" + conec.redondear(descsuma));
            txttotal.setText("" + conec.redondear((suma + (suma * ivasuma) / 100) - descsuma));
        }
        conec.desconectar();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(facturacompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(facturacompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(facturacompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(facturacompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new facturaventa().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaceptar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btncodiigo;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnproductos;
    private javax.swing.JCheckBox cbimprimir;
    private javax.swing.JComboBox cbtermino;
    private com.toedter.calendar.JDateChooser dcfecha;
    private com.toedter.calendar.JDateChooser dctransaccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblapellidos;
    private javax.swing.JLabel lblautorizacion;
    private javax.swing.JLabel lblcheque;
    private javax.swing.JLabel lbldescuento;
    private javax.swing.JLabel lbldireccion;
    private javax.swing.JLabel lblemail;
    private org.edisoncor.gui.label.LabelMetric lblempresa;
    private javax.swing.JLabel lblfactura;
    private javax.swing.JLabel lblfacturacion;
    private javax.swing.JLabel lbliva;
    private javax.swing.JLabel lblnombres;
    private javax.swing.JLabel lblnumerof;
    private javax.swing.JLabel lblproveedor;
    private javax.swing.JLabel lblreferencia;
    private javax.swing.JLabel lblrucedula;
    private javax.swing.JLabel lblrucempresa;
    private javax.swing.JLabel lblsubtotal;
    private javax.swing.JLabel lbltermino;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JLabel lbltransaccion;
    private javax.swing.JLabel lblvalor;
    private javax.swing.JLabel lblvencimiento;
    private org.edisoncor.gui.panel.Panel panel3;
    private javax.swing.ButtonGroup rdradios;
    private javax.swing.JTable tabladatos;
    private javax.swing.JTextArea tatobservaciones;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtautorizacion;
    private javax.swing.JTextField txtcheque;
    private javax.swing.JTextField txtdescuento;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfactura;
    private javax.swing.JTextField txtiva;
    private javax.swing.JTextField txtnombres;
    private javax.swing.JTextField txtnumerof;
    private javax.swing.JTextField txtreferencia;
    private javax.swing.JTextField txtrucedula;
    private javax.swing.JTextField txtsubtotal;
    private javax.swing.JTextField txttotal;
    private javax.swing.JTextField txtvalor;
    // End of variables declaration//GEN-END:variables

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {

        if (pageIndex == 0) {
            Graphics2D g2d = (Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
            this.printAll(graphics);
            return PAGE_EXISTS;
        } else {
            return NO_SUCH_PAGE;
        } //To change body of generated methods, choose Tools | Templates.
    }
}
